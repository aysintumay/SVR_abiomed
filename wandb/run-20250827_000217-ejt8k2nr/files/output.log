In env continuous
<module 'config' from '/home/ubuntu/noisy_mujoco/abiomed_env/config.py'>
time series transformer device cuda:4
Using device: cuda:4
/home/ubuntu/miniconda3/envs/mopo/lib/python3.8/site-packages/torch/nn/modules/transformer.py:307: UserWarning: enable_nested_tensor is True, but self.use_nested_tensor is False because encoder_layer.self_attn.batch_first was not True(use batch_first for better inference performance)
  warnings.warn(f"enable_nested_tensor is True, but self.use_nested_tensor is False because {why_not_sparsity_fast_path}")
Loading model from cuda:1 to cuda:4
/home/ubuntu/noisy_mujoco/abiomed_env/model.py:404: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  state_dict = torch.load(path, map_location="cuda:1")
Model loaded from /abiomed/downsampled/models/10min_1hr_all_data_model.pth
loaded datasets with length
 train:  12051
 val:  1938
 test:  3876
Data loaded from /abiomed/downsampled/10min_1hr_all_data.pkl
Continuous action space. Min action: -2.2312597235306466, Max action: 1.8085589693336617
No validation data for Abiomed dataset
torch.Size([17865, 6, 12]) torch.Size([17865, 6]) torch.Size([17865, 66])
 20%|████████████████████████████████████▌                                                                                                                                                     | 3508/17865 [00:01<00:06, 2141.18it/s]
Traceback (most recent call last):
  File "hpo/hpo.py", line 286, in <module>
    results_df, best_params, best_model_path = run_hyperparameter_search(args, gamma_ranges)
  File "hpo/hpo.py", line 136, in run_hyperparameter_search
    policy, custom_metric, metrics, save_path = train(trial_args)
  File "/home/ubuntu/SVR/SVR_old/main.py", line 59, in train
    replay_buffer.convert_abiomed(dataset, env, args.fs)
  File "/home/ubuntu/SVR/utils.py", line 149, in convert_abiomed
    reward = env._compute_reward(next_observation[i].reshape(-1,self.timesteps, self.feature_dim), observation[i].reshape(1,self.timesteps, self.feature_dim), action2)
  File "/home/ubuntu/noisy_mujoco/abiomed_env/rl_env.py", line 133, in _compute_reward
    reward = np.clip(reward, -2.0, a_max = None) # ~4% is clipped from below
  File "<__array_function__ internals>", line 180, in clip
  File "/home/ubuntu/miniconda3/envs/mopo/lib/python3.8/site-packages/numpy/core/fromnumeric.py", line 2154, in clip
    return _wrapfunc(a, 'clip', a_min, a_max, out=out, **kwargs)
  File "/home/ubuntu/miniconda3/envs/mopo/lib/python3.8/site-packages/numpy/core/fromnumeric.py", line 54, in _wrapfunc
    return _wrapit(obj, method, *args, **kwds)
  File "/home/ubuntu/miniconda3/envs/mopo/lib/python3.8/site-packages/numpy/core/fromnumeric.py", line 43, in _wrapit
    result = getattr(asarray(obj), method)(*args, **kwds)
  File "/home/ubuntu/miniconda3/envs/mopo/lib/python3.8/site-packages/numpy/core/_methods.py", line 135, in _clip
    if _clip_dep_is_scalar_nan(min):
  File "/home/ubuntu/miniconda3/envs/mopo/lib/python3.8/site-packages/numpy/core/_methods.py", line 98, in _clip_dep_is_scalar_nan
    return um.isnan(a)
KeyboardInterrupt
